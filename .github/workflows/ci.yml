# Unique name for this workflow
name: CI

# Definition when the workflow should run
on:
  workflow_dispatch:
  push:
    #branches:
    #  - main
    paths-ignore:
      - 'sfdx-project.json'
      - 'README.md'
      - 'docs/**'
      - 'doc-assets/**'
      - '.github/**'
      - '.vscode/**'

# Jobs to be executed
jobs:
  format-lint:
    runs-on: ubuntu-latest
    steps:
      # Checkout the source code
      - name: 'Checkout source code'
        uses: actions/checkout@v2

      # Cache node_modules to speed up the process
      - name: 'Restore node_modules cache'
        id: cache-npm
        uses: actions/cache@v1
        with:
          path: node_modules
          key: npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-${{ env.cache-name }}-
            npm-
      # Install npm dependencies for Prettier and Jest
      - name: 'Install npm dependencies'
        if: steps.cache-npm.outputs.cache-hit != 'true'
        run: npm ci

      # Start local Apex parser server for Prettier
      - name: 'Start local Apex parser server for Prettier'
        run: npm run apex:local:start &

      # Wait for Apex parser server startup
      - name: 'Wait for Apex parser server startup'
        run: timeout 30 bash -c 'until printf "" 2>>/dev/null >>/dev/tcp/$0/$1; do sleep 1; done' 127.0.0.1 2117

      # Prettier formatting
      - name: 'Code formatting EXECUTION with Prettier'
        run: npm run prettier:apex:local

      # Stop local Apex parser server for Prettier
      - name: 'Stop local Apex parser server for Prettier'
        if: always()
        run: npm run apex:local:stop
  pmd-analysis:
    runs-on: ubuntu-latest
    needs: format-lint
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      # Checkout the source code
      - name: 'Checkout source code'
        uses: actions/checkout@v2

      # Install PMD
      - name: 'Install PMD'
        run: |
          PMD_VERSION=`cat pmd/pmd-version.txt`
          wget https://github.com/pmd/pmd/releases/download/pmd_releases%2F$PMD_VERSION/pmd-bin-$PMD_VERSION.zip
          unzip pmd-bin-$PMD_VERSION.zip -d ~
          mv ~/pmd-bin-$PMD_VERSION ~/pmd
          ~/pmd/bin/run.sh pmd --version
      # Run PMD scan
      - name: 'Run PMD scan'
        run: ~/pmd/bin/run.sh pmd -d sfdx-source/LabsActionPlans/main/default/classes -R pmd/deployRules.xml -f text --cache pmd/cache -min 1
